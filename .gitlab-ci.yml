stages:
  - build
  - test
  - release
  - deploy

variables:
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME

build:
  stage: build
  script:
    - docker-compose -f docker-compose.ci.yml build

test:
  stage: test
  before_script:
    - docker-compose -f docker-compose.ci.yml up -d db
    - sleep 30
    - docker-compose -f docker-compose.ci.yml run --rm app rake db:create
  script:
    - docker-compose -f docker-compose.ci.yml run --rm app rspec
  after_script:
    - docker-compose -f docker-compose.ci.yml down

release:
  stage: release
  before_script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
  script:
    - docker tag ipsapp_app $CONTAINER_RELEASE_IMAGE
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker push $CONTAINER_RELEASE_IMAGE
  only:
    - develop
    - master

staging:
  stage: deploy
  environment: staging
  script: >
    docker run --rm
    --volume /home/ansible/.ssh/ips-staging.pem:/app/user/.ssh/ips-staging.pem:ro
    --env ANSIBLE_VAULT_PASSWORD=$ANSIBLE_VAULT_PASSWORD
    --env DO_API_TOKEN=$DO_API_TOKEN
    --env DOCKER_LOGIN_USERNAME=$DOCKER_LOGIN_USERNAME
    --env DOCKER_LOGIN_PASSWORD=$DOCKER_LOGIN_PASSWORD
    ips-ansible deploy:staging
  only:
    - develop

production:
  stage: deploy
  environment: production
  script: >
    docker run --rm
    --volume /home/ansible/.ssh/ips-production.pem:/app/user/.ssh/ips-production.pem:ro
    --env ANSIBLE_VAULT_PASSWORD=$ANSIBLE_VAULT_PASSWORD
    --env DO_API_TOKEN=$DO_API_TOKEN
    --env DOCKER_LOGIN_USERNAME=$DOCKER_LOGIN_USERNAME
    --env DOCKER_LOGIN_PASSWORD=$DOCKER_LOGIN_PASSWORD
    ips-ansible deploy:production
  only:
    - master
